===============================================================
PLANNED MEALS API - KROKI WDRO≈ªENIA MIGRACJI
===============================================================

üìã STATUS: Gotowe do zastosowania
üìÖ DATA: 2025-10-11

===============================================================
KROK 1: Zastosuj Migracjƒô Bazy Danych
===============================================================

OPCJA A - Przez Supabase Dashboard (Zalecane):
--------------------------------------------------------------
1. Otw√≥rz: https://supabase.com/dashboard
2. Wybierz projekt: LowCarbPlaner
3. Przejd≈∫ do: SQL Editor
4. Kliknij: + New Query
5. Skopiuj zawarto≈õƒá z:
   supabase/migrations/20251011101810_add_planned_meals_performance_indexes.sql
6. Wklej do edytora
7. Kliknij: RUN (lub Ctrl+Enter)
8. Sprawd≈∫: Success. Rows returned: 0

‚úÖ Migracja zastosowana!

OPCJA B - Przez Supabase CLI:
--------------------------------------------------------------
npx supabase login
npx supabase link --project-ref YOUR_PROJECT_REF
npx supabase db push --linked

===============================================================
KROK 2: Weryfikuj Indeksy
===============================================================

W Supabase SQL Editor uruchom:
--------------------------------------------------------------
SELECT schemaname, tablename, indexname
FROM pg_indexes
WHERE tablename IN ('planned_meals', 'recipes', 'recipe_ingredients')
  AND schemaname IN ('public', 'content')
ORDER BY tablename, indexname;

Oczekiwane NOWE indeksy (4):
‚úì idx_planned_meals_recipe
‚úì idx_recipe_ingredients_recipe
‚úì idx_recipe_ingredients_ingredient
‚úì idx_recipes_total_calories

LUB u≈ºyj pe≈Çnego skryptu weryfikacyjnego:
supabase/verify_indexes.sql

===============================================================
KROK 3: Deploy Aplikacji
===============================================================

git add .
git commit -m "feat(api): implement planned-meals endpoints

ü§ñ Generated with Claude Code"
git push origin main

# Cloudflare Pages automatycznie wykona deployment

===============================================================
KROK 4: Test Endpoint√≥w
===============================================================

GET /api/planned-meals?start_date=2024-01-01&end_date=2024-01-07
PATCH /api/planned-meals/123 (body: {"action": "mark_eaten", "is_eaten": true})
GET /api/planned-meals/123/replacements

U≈ºyj Postman/Insomnia z tokenem:
Authorization: Bearer YOUR_SUPABASE_TOKEN

===============================================================
DOKUMENTACJA
===============================================================

üìñ G≈Ç√≥wny README:
   README-PLANNED-MEALS-API.md

üìñ Szczeg√≥≈Çowa dokumentacja:
   .ai/10b01 api-planned-meals-implementation-plan.md (plan)
   .ai/10b02 planned-meals-database-setup.md (RLS + indeksy)
   .ai/10b03 deployment-checklist.md (deployment)
   .ai/10b04 manual-migration-guide.md (migracja rƒôczna)

üìñ Kod:
   src/lib/actions/planned-meals.ts (Server Actions)
   src/lib/validation/planned-meals.ts (Walidacja)
   app/api/planned-meals/**/route.ts (API Routes)

===============================================================
STATUS KO≈ÉCOWY
===============================================================

‚úÖ Backend (Server Actions) - GOTOWE
‚úÖ API Route Handlers - GOTOWE
‚úÖ Walidacja Zod - GOTOWE
‚úÖ Typy TypeScript - GOTOWE
‚úÖ RLS Policies - JU≈ª ZAIMPLEMENTOWANE
‚úÖ Migracja Indeks√≥w - GOTOWA DO ZASTOSOWANIA
‚úÖ Build - SUKCES
‚úÖ Dokumentacja - KOMPLETNA

‚è≥ DO ZROBIENIA PRZEZ CIEBIE:
   1. Zastosuj migracjƒô (Krok 1)
   2. Deploy aplikacji (Krok 3)
   3. Test endpoint√≥w (Krok 4)

===============================================================
GOTOWE! üöÄ
===============================================================
